name: Market News Scraper

on:
  push:
    branches:
      - master
      - 'feature/**'
  schedule:
    - cron: '0 22 * * *' # JST 7時
    - cron: '0 4,14 * * *' # JST 13時, 23時
  workflow_dispatch: # 手動実行を可能にする
    inputs:
      enable_podcast:
        description: 'Enable podcast generation'
        required: false
        default: 'false'
        type: choice
        options:
        - 'true'
        - 'false'

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    permissions:
      contents: write # リポジトリへの書き込み権限を付与

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.11' # プロジェクトで使用しているPythonのバージョン

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: Clean up previous run artifacts
      run: |
        # 既存のHTMLファイルと公開ディレクトリを完全削除
        rm -f index.html
        rm -rf public/
        # 一時的なファイルやキャッシュも削除
        rm -f *.html
        rm -rf __pycache__/
        echo "Clean up completed - all previous artifacts removed"

    - name: Install system dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y ffmpeg mecab mecab-ipadic-utf8 libmecab-dev
        echo "MeCab installation completed"
        mecab --version

    - name: Install Japanese fonts for WordCloud
      run: |
        sudo apt-get install -y fonts-noto-cjk fonts-ipafont-gothic fonts-ipafont-mincho
        echo "Japanese fonts installation completed"
        # フォント確認
        fc-list | grep -i "noto\|ipa" | head -5

    - name: Run script
      env:
        # Google認証設定 (OAuth2に固定)
        GOOGLE_AUTH_METHOD: 'oauth2'
        GOOGLE_DRIVE_OUTPUT_FOLDER_ID: ${{ secrets.GOOGLE_DRIVE_OUTPUT_FOLDER_ID }}
        GOOGLE_OVERWRITE_DOC_ID: ${{ secrets.GOOGLE_OVERWRITE_DOC_ID }}
        # OAuth2認証情報のみを設定（サービスアカウント変数は削除済み）
        GOOGLE_OAUTH2_CLIENT_ID: ${{ secrets.GOOGLE_OAUTH2_CLIENT_ID }}
        GOOGLE_OAUTH2_CLIENT_SECRET: ${{ secrets.GOOGLE_OAUTH2_CLIENT_SECRET }}
        GOOGLE_OAUTH2_REFRESH_TOKEN: ${{ secrets.GOOGLE_OAUTH2_REFRESH_TOKEN }}
        # AI設定
        GEMINI_API_KEY: ${{ secrets.GEMINI_API_KEY }}
        # ドキュメント生成制御
        FORCE_DOCUMENT_GENERATION: true
        # ポッドキャスト機能用環境変数
        ENABLE_PODCAST_GENERATION: ${{ github.event.inputs.enable_podcast || secrets.ENABLE_PODCAST_GENERATION }}
        LINE_CHANNEL_ACCESS_TOKEN: ${{ secrets.LINE_CHANNEL_ACCESS_TOKEN }}
        LINE_CHANNEL_SECRET: ${{ secrets.LINE_CHANNEL_SECRET }}
        PODCAST_RSS_BASE_URL: ${{ secrets.PODCAST_RSS_BASE_URL }}
        PODCAST_AUTHOR_NAME: ${{ secrets.PODCAST_AUTHOR_NAME }}
        PODCAST_AUTHOR_EMAIL: ${{ secrets.PODCAST_AUTHOR_EMAIL }}
        PODCAST_RSS_TITLE: ${{ secrets.PODCAST_RSS_TITLE || 'マーケットニュースポッドキャスト' }}
        PODCAST_RSS_DESCRIPTION: ${{ secrets.PODCAST_RSS_DESCRIPTION || 'AIが生成する毎日のマーケットニュース' }}
        PODCAST_MONTHLY_COST_LIMIT: ${{ secrets.PODCAST_MONTHLY_COST_LIMIT || '10.0' }}
        PODCAST_TARGET_DURATION_MINUTES: ${{ secrets.PODCAST_TARGET_DURATION_MINUTES || '10.0' }}
        PODCAST_MAX_FILE_SIZE_MB: ${{ secrets.PODCAST_MAX_FILE_SIZE_MB || '15' }}
      timeout-minutes: 20
      run: python main.py

    - name: Create public directory and copy files
      run: |
        mkdir -p public
        cp index.html public/
        cp -r assets public/
        # ポッドキャスト関連ファイルがあればコピー
        if [ -d "podcast" ]; then
          cp -r podcast public/
        fi

    - name: Deploy to GitHub Pages
      if: github.ref == 'refs/heads/master'
      uses: peaceiris/actions-gh-pages@v4.0.0
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        publish_dir: ./public
        publish_branch: gh-pages # デプロイ用のブランチ
        force_orphan: true
        user_name: 'github-actions[bot]'
        user_email: 'github-actions[bot]@users.noreply.github.com'
